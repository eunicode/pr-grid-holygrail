/* ===================================================================== 
   Practice CSS Grid Layout
======================================================================== */

/*----------------------------------------------------------------------
Basic single column layout for all browsers:
------------------------------------------------------------------------ */

body {
  /* Restrict width so site still looks nice on wide viewports */
  max-width: 50rem; /* max-width prevents horizontal scrollbars when width is
  skinnier than 50rem */
  margin: 0 auto; /* Horizontally center everything */
}

/* Use flex to make 'main' grow to fill the viewport and the footer sticky */

@supports (display: flex) {
  .grid {
    display: flex;
    flex-direction: column;
    height: 100vh;
  }

  main {
    flex-grow: 1;
  }

  /* Alternatively, use margin-top: auto to make footer's margin take up all the
  extra space in the flex container. This only works on flex items. */
  /* footer {
    margin-top: auto;
  } */
}

/*----------------------------------------------------------------------
CSS Grid Layout for browsers with CSS Grid support:
------------------------------------------------------------------------ */

@supports (grid-area: auto) {
  /* Single column layout */

  header {
    grid-area: head;
  }
  main {
    grid-area: main;
  }
  .links {
    grid-area: links;
  }
  .ads {
    grid-area: ads;
  }
  footer {
    grid-area: foot;
  }

  .grid {
    display: grid;
    grid-auto-rows: auto; /* row height depends on content */
    grid-template-columns: 1fr; /* One column */
    grid-gap: 10px;
    grid-template-areas:
      "head" /* One item per row */
      "links"
      "main"
      "ads"
      "foot";
  }

  /* Two column layout */

  @media (min-width: 50em) {
    /* 880px */
    /* min-width is inclusive, this targets viewports greater than or equal to 
	50em. In other words, the minimum width this layout applies to is 50em */

    body {
      max-width: none; /* reset body width */
    }

    .grid {
      grid-template-columns: 1fr 1fr;
      /* Adjust the height of the links/ads row */
      grid-template-rows: auto auto minmax(min-content, 100px) auto;
      grid-template-areas:
        "head head"
        "main main"
        "links ads"
        "foot foot";
    }
  }

  /* Three column layout */

  @media (min-width: 65em) {
    /* 1144px */
    .grid {
      grid-template-columns: 1fr 3fr 1fr;
      /* I need to declare grid-template-rows bc otherwise the grid-template-row
      values in the media query for 768px viewports will apply here */
      grid-template-rows: 1fr 4fr 1fr;
      grid-template-areas:
        "head head head"
        "links main ads"
        "foot foot foot";
    }
  }
}
