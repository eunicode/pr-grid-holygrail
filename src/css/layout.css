/* ===================================================================== 
   Practice CSS Grid Layout
======================================================================== */

/* 
  Make mobile-first responsive layout
*/

/* Single column layout with Grid */

header {
  grid-area: head;
}

main {
  grid-area: main;
}

.links {
  grid-area: links;
}

.ads {
  grid-area: ads;
}

footer {
  grid-area: foot;
}

.grid {
  height: 100vh;
  display: grid;
  grid-auto-rows: auto;
  /* What if I want the ads row to be a certain percentage of the viewport? */
  grid-template-columns: 1fr; /* One column */
  grid-gap: 10px;
  grid-template-areas:
    "head" /* One item per row */
    "links"
    "main"
    "ads"
    "foot";
}

/* Two column layout */

@media (min-width: 768px) {
  /* min-width is inclusive, this targets viewports greater than or equal to 
  768px. In other words, the minimum width this layout applies to is 768px */
  .grid {
    grid-template-columns: 1fr 1fr;
    /* Adjust the height of the links/ads row */
    grid-template-rows: auto auto minmax(min-content, 100px) auto;
    grid-template-areas:
      "head head"
      "main main"
      "links ads"
      "foot foot";
  }
}

/* Three column layout */

@media (min-width: 992px) {
  .grid {
    grid-template-columns: 1fr 3fr 1fr;
    /* I need to declare grid-template-rows bc otherwise the grid-template-row
    values in the media query for 768px viewports will apply here */
    grid-template-rows: 1fr 4fr 1fr;
    grid-template-areas:
      "head head head"
      "links main ads"
      "foot foot foot";
  }
}
